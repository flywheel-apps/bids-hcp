{
  "name": "bids_hcp",
  "label": "BIDS-based HCP Preprocessing Pipeline",
  "description": "Runs the preprocessing steps of the Human Connectome Project Minimal Preprocessing Pipeline, described in Glasser et al. 2013. Currently this includes v4.3.0 release of PreFreeSurfer, FreeSurfer, and PostFreeSurfer pipelines. This Gear also generates some helpful QC images.",
  "author": "Human Connectome Project",
  "maintainer": "Flywheel <support@flywheel.io>",
  "license": "Other",
  "url": "https://github.com/Washington-University/Pipelines",
  "source": "https://github.com/flywheel-apps/bids_hcp",
  "cite": "Glasser M. F., Sotiropoulos S. N., Wilson J. A., Coalson T. S., Fischl B., Andersson J. L., … Consortium, W. U.-M. H. (2013). The minimal preprocessing pipelines for the Human Connectome Project. NeuroImage, 80, 105–124.",
  "version": "0.0.1_4.3.0",
  "custom": {
    "docker-image": "flywheel/bids_hcp:0.0.1_4.3.0",
    "gear-builder": {
      "category": "analysis",
      "image": "flywheel/bids_hcp:0.0.1_4.3.0"
    },
    "flywheel": {
      "suite": "Human Connectome Project"
    }
  },
  "inputs": {
    "api-key": {
        "base": "api-key"
    },
    "FreeSurferLicense": {
      "description": "FreeSurfer license.txt file",
      "base": "file",
      "optional": true
    }
  },
  "config": {
    "save-on-error": {
        "type":"boolean",
        "default": false,
        "description": "Set to 'True' to save output on error."
    },
    "Subject": {
      "type": "string",
      "description": "Subject ID (use to override session subject id)",
      "optional": true
    },
    "RegName": {
      "type": "string",
      "enum":["MSMSulc","FS"],
      "default": "MSMSulc",
      "description": "Surface registration type: either 'FS' (freesurfer) or 'MSMSulc' (HCP default)"
    },
    "BrainSize": {
      "type": "integer",
      "default": 150,
      "description": "Brain size in mm (in Superior-Inferior axis), typically 150 (default) for adults"
    },
    "TemplateSize": {
      "type": "string",
      "default": "0.8mm",
      "description": "Voxel size of HCP anatomical template. Best if matches input. (Options = 0.7mm, 0.8mm (default), 1mm)"
    },
    "StructuralUnwarpDirection": {
      "description": "Readout direction for structural scans ( 'x', 'x-', 'y', 'y-', 'z', 'z-' ). HCP default = 'z'",
      "default": "z",
      "type": "string",
      "enum": ["x", "x-", "y", "y-", "z", "z-"]
    },
    "aseg_csv": {
        "type":"boolean",
        "default": true,
        "description": "Write aseg stats to a csv file and analysis metadata."
    },
    "dry-run": {
        "type":"boolean",
        "default": false,
        "description": "Log all commands, but do not execute."
    },
    "gear-run-bids-validation": {
        "type": "boolean",
        "default": false,
        "description": "Run BIDS validator prior to attempting analysis."
    },
    "gear-abort-on-bids-error": {
        "type": "boolean",
        "default": false,
        "description": "Terminate gear if BIDS errors are encountered. (No output will be generated.)"
    },
    "fMRIName": {
            "type": "string",
            "default": "rfMRI_REST1_RL",
            "enum": [
                "rfMRI_REST1_RL",
                "rfMRI_REST1_LR",
                "rfMRI_REST2_RL",
                "rfMRI_REST2_LR",
                "tfMRI_WM_RL",
                "tfMRI_WM_LR",
                "tfMRI_GAMBLING_RL",
                "tfMRI_GAMBLING_LR",
                "tfMRI_MOTOR_RL",
                "tfMRI_MOTOR_LR",
                "tfMRI_LANGUAGE_RL",
                "tfMRI_LANGUAGE_LR",
                "tfMRI_SOCIAL_RL",
                "tfMRI_SOCIAL_LR",
                "tfMRI_RELATIONAL_RL",
                "tfMRI_RELATIONAL_LR",
                "tfMRI_EMOTION_RL",
                "tfMRI_EMOTION_LR"
            ],
            "description": "Output name for preprocessed data. This is the type, objective, and configuration of the particular fMRI scan."
        },
        "BiasCorrection": {
            "type": "string",
            "default": "NONE",
            "enum": [
                "NONE",
                "SEBased",
                "Legacy"
            ],
            "description": "Bias-field estimation method. 'NONE'(default),'SEBased', or 'Legacy'. 'SEBased'=Estimate from SpinEchoFieldMap (only possible with both Pos and Neg SpinEcho), 'Legacy'=Estimate from structural scans (only valid if structural collected in the same session, and without any subject movement)"
        },
        "MotionCorrection": {
            "type": "string",
            "default": "MCFLIRT",
            "enum": [
                "MCFLIRT",
                "FLIRT"
            ],
            "description": "Use 'MCFLIRT' (standard FSL moco) for most acquisitions.  'FLIRT'=custom algorithm used by HCP3T internally, but not recommended for public use"
        },
        "Func_AnatomyRegDOF": {
            "type": "integer",
            "default": 6,
            "enum": [
                6,
                12
            ],
            "description": "Degrees of freedom for fMRI->Anat registration. 6 (default) = rigid body, when all data is from same scanner. 12 = full affine, recommended for 7T fMRI->3T anatomy"
        },
      "Diff_AnatomyRegDOF": {
              "type": "integer",
              "default": 6,
              "enum": [
                  6,
                  12
              ],
              "description": "Degrees of freedom for Diffusion->Anat registration. 6 (default) = rigid body, when all data is from same scanner. 12 = full affine, recommended for 7T fMRI->3T anatomy"
          }
  },
  "command": "/flywheel/v0/run.py"
}
